% Plot solid line in Expected fitness gain over sigma* and sigma_ep^* 
% solid line in convergence rate graph

% a = openfig('test.fig');

mu = 3;
s_start = 0.2;
increment =0.2;
s_end = 6.2;
sigma_star = s_start:increment:s_end;

% noise-to-signal ratio = 4
ita = 4;
final = sigma_star*(1.065389626877247)./sqrt(1+ita^2)-sigma_star.^2./(2*mu);

% noise-to-signal ratio = 1
ita = 1;
final1 = sigma_star*(1.065389626877247)./sqrt(1+ita^2)-sigma_star.^2./(2*mu);
% noise-to-signal ratio = 1/4
ita = 1/4;
final2 = sigma_star*(1.065389626877247)./sqrt(1+ita^2)-sigma_star.^2./(2*mu);
% noise-to-signal ratio = 0
ita = 0;
final3 = sigma_star*(1.065389626877247)./sqrt(1+ita^2)-sigma_star.^2./(2*mu);

% expected fitness gain over noise-to-signal ratio v
figure(2);
hold on;
plot(sigma_star,final,'g');     % ita = 4
plot(sigma_star,final1,'r');    % ita = 1
plot(sigma_star,final2,'b');    % ita = 1/4
plot(sigma_star,final3,'k');    % ita = 0
hold off;
xlabel('\sigma*','FontSize',15);%
ylabel('Expected fitness gain','FontSize',15); 
% set(gca, 'YScale', 'log');


% control the range for noise-to-signal ratio v
% v_start = 0;
% v_increment = 0.2;
% v_end = 10;
%     
% sigma_star_opt_array = zeros((v_end-v_start)/v_increment+1,1);              % 

% i = 1;
% for v = v_start:v_increment:v_end
%     sigma_star_temp = 0:0.0001:15;
%     final = sigma_star_temp*(1.065389626877247)./sqrt(1+v^2)-sigma_star_temp.^2./(2*mu);
%     [sigma_star_opt_array(i), index] = max(final);     
%     d = sprintf('v = %d, sigma_opr = %d',v, sigma_star_opt_array(i));
%     disp(d);
% end
% figure(3);
% plot(v_start:v_increment:v_end,sigma_star_opt_array);
% xlabel('v','FontSize',15);%
% ylabel('\sigma^*','FontSize',15); 
% % set(gca, 'YScale', 'log');

% solve the plot by taking derivative
figure(3);
v = 0:0.1:10;
plot(v,1.065389626877247*mu./(sqrt(1+v.*v)));
xlabel('noise-to-signal ratio \','FontSize',15);%
ylabel('opt. normalized step size \sigma^*','FontSize',15); 
set(gca, 'XScale', 'log');

figure(4);
v = 0:0.1:10;
plot(v,1.065389626877247*mu./(sqrt(1+v.*v)));
xlabel('expected fitness gain \upsilon		','FontSize',15);%
ylabel('opt. normalized step size \sigma^*','FontSize',15); 
set(gca, 'XScale', 'log');




